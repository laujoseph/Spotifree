{"ast":null,"code":"var _jsxFileName = \"/Users/josephlau/Desktop/React/d9/u2d9_homework/starter-code/src/components/Result.js\";\nimport React from 'react';\nimport results from './results';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Result = () => {\n  console.log(results[0].show.image.medium);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: results.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n      alt: \"image\",\n      children: [\"Movie title: \", movie.show.name, \"*\\\\const name = new type(arguments); Movie rating: \", movie.show.rating.average, /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.show.image.medium\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this)]\n    }, movie.show.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["/Users/josephlau/Desktop/React/d9/u2d9_homework/starter-code/src/components/Result.js"],"names":["React","results","Result","console","log","show","image","medium","map","movie","name","rating","average","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAAC,CAAD,CAAP,CAAWI,IAAX,CAAgBC,KAAhB,CAAsBC,MAAlC;AACA,sBACI;AAAA,cACKN,OAAO,CAACO,GAAR,CAAaC,KAAD,iBACT;AAAwB,MAAA,GAAG,EAAC,OAA5B;AAAA,kCACkBA,KAAK,CAACJ,IAAN,CAAWK,IAD7B,yDAEmBD,KAAK,CAACJ,IAAN,CAAWM,MAAX,CAAkBC,OAFrC,eAGI;AAAK,QAAA,GAAG,EAAEH,KAAK,CAACJ,IAAN,CAAWC,KAAX,CAAiBC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,OAASE,KAAK,CAACJ,IAAN,CAAWQ,EAApB;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAbD;;KAAMX,M;AAeN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport results from './results';\n\nconst Result = () => {\n    console.log(results[0].show.image.medium)\n    return (\n        <ul>\n            {results.map((movie)=>(\n                <li key={movie.show.id} alt=\"image\">\n                    Movie title: {movie.show.name}*\\const name = new type(arguments);\n                    Movie rating: {movie.show.rating.average}\n                    <img src={movie.show.image.medium}/>\n                </li>\n            ))}\n        </ul>\n    ); \n};\n\nexport default Result;"]},"metadata":{},"sourceType":"module"}