{"ast":null,"code":"var _jsxFileName = \"/Users/josephlau/Desktop/React/d9/u2d9_homework/starter-code/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [inputText, setInputText] = useState(\"\");\n\n  let inputHandler = e => {\n    //convert input text to lower case\n    var lowerCase = e.target.value.toLowerCase();\n    setInputText(lowerCase);\n  }; //create a new array by filtering the original array\n\n\n  const filteredData = data.filter(el => {\n    //if no input the return the original\n    if (props.input === '') {\n      return el;\n    } //return the item which contains the user input\n    else {\n      return el.text.toLowerCase().includes(props.input);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: filteredData.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: item.text\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: inputText,\n      type: \"text\",\n      placeholder: \"Enter a Movie Title\",\n      onChange: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Search, \"FupQuLxG7pBPrulNgTXkcZMsQO8=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/josephlau/Desktop/React/d9/u2d9_homework/starter-code/src/components/Search.js"],"names":["React","useState","Search","inputText","setInputText","inputHandler","e","lowerCase","target","value","toLowerCase","filteredData","data","filter","el","props","input","text","includes","map","item","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,EAAD,CAA1C;;AACE,MAAII,YAAY,GAAIC,CAAD,IAAO;AACxB;AACA,QAAIC,SAAS,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,WAAf,EAAhB;AACAN,IAAAA,YAAY,CAACG,SAAD,CAAZ;AAAyB,GAH3B,CAFmB,CAMrB;;;AACI,QAAMI,YAAY,GAAGC,IAAI,CAACC,MAAL,CAAaC,EAAD,IAAQ;AACrC;AACA,QAAIC,KAAK,CAACC,KAAN,KAAgB,EAApB,EAAwB;AACpB,aAAOF,EAAP;AACH,KAFD,CAGA;AAHA,SAIK;AACD,aAAOA,EAAE,CAACG,IAAH,CAAQP,WAAR,GAAsBQ,QAAtB,CAA+BH,KAAK,CAACC,KAArC,CAAP;AACH;AACJ,GAToB,CAArB;AAUA,sBACI;AAAA,cACKL,YAAY,CAACQ,GAAb,CAAkBC,IAAD,iBACd;AAAA,gBAAmBA,IAAI,CAACH;AAAxB,OAASG,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAQA,sBACI;AAAA,4BACA;AAAO,MAAA,KAAK,EAAElB,SAAd;AAAyB,MAAA,IAAI,EAAC,MAA9B;AAAqC,MAAA,WAAW,EAAC,qBAAjD;AAAuE,MAAA,QAAQ,EAAEE;AAAjF;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,6BACA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAUH,CAnCD;;GAAMH,M;;KAAAA,M;AAqCN,eAAeA,MAAf","sourcesContent":["import React, {useState} from 'react';\n\nconst Search = () => {\nconst [inputText, setInputText] = useState(\"\");\n  let inputHandler = (e) => {\n    //convert input text to lower case\n    var lowerCase = e.target.value.toLowerCase();\n    setInputText(lowerCase);}\n//create a new array by filtering the original array\n    const filteredData = data.filter((el) => {\n        //if no input the return the original\n        if (props.input === '') {\n            return el;\n        }\n        //return the item which contains the user input\n        else {\n            return el.text.toLowerCase().includes(props.input)\n        }\n    })\n    return (\n        <ul>\n            {filteredData.map((item) => (\n                <li key={item.id}>{item.text}</li>\n            ))}\n        </ul>\n    )\n\n    return (\n        <>\n        <input value={inputText} type=\"text\" placeholder=\"Enter a Movie Title\" onChange={inputHandler}/>\n        <div>\n        <button type=\"submit\">\n            Search\n        </button>\n        </div>\n        </>\n    );\n};\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}