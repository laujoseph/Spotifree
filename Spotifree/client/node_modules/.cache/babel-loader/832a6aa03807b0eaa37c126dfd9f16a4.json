{"ast":null,"code":"var _jsxFileName = \"/Users/josephlau/Desktop/React/Spotifree/client/src/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport useAuth from \"./useAuth\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport TrackSearchResult from \"./TrackSearchResult\";\nimport MusicPlayer from \"./MusicPlayer\";\nimport axios from \"axios\";\nimport FadeIn from \"react-fade-in\";\nimport UserProfile from \"./UserProfile\";\nimport RecentlyPlayed from \"./RecentlyPlayed\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"1a9068e5a02c4897adb142f295edfe75\"\n});\nconst OAuth = \"BQCyyWCMzxyJmIBrI8YJFrMFVxkCnFBzO_REMsSUux8dJqj8xf73yHwFyv_dmiH53SF6dUG90vTM5U48_gopjm567ahaS3MF9Voo7n8mCRhnQR-jpb3FCDtltGjI2DPFf9OL1Q5sd5s8c49v2dsX\";\n\nconst MainPage = _ref => {\n  _s();\n\n  let {\n    code\n  } = _ref;\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [currentTrack, setCurrentTrack] = useState();\n  const [lyrics, setLyrics] = useState();\n  const [showGreeting, setShowGreeting] = useState(true);\n  const [userInfo, setUserInfo] = useState(false);\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\n\n  const chooseTrack = track => {\n    setCurrentTrack(track); // when choosing track, empty the search\n\n    setSearch(\"\");\n    setLyrics(\"\");\n  };\n\n  useEffect(() => {});\n  spotifyApi.getMyRecentlyPlayedTracks({\n    limit: 20\n  }).then(res => {\n    setRecentlyPlayed;\n  }); // Get recently played tracks \n\n  useEffect(() => {\n    if (!accessToken) return;\n\n    const fetchRecentlyPlayed = () => {\n      axios.get(\"https://api.spotify.com/v1/me/player/recently-played?limit=10\", {\n        headers: {\n          Authorization: `Bearer ${OAuth}`,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        const recentlyplayedlist = res.data.items;\n        console.log(recentlyplayedlist);\n        setRecentlyPlayed(recentlyplayedlist);\n      });\n    };\n\n    fetchRecentlyPlayed();\n  }, [accessToken]);\n  useEffect(() => {\n    if (!accessToken) return;\n\n    const fetchUserInfo = () => {\n      axios.get(\"https://api.spotify.com/v1/me\", {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        // console.log(res.data);\n        setUserInfo(res.data);\n      });\n    };\n\n    fetchUserInfo();\n  }, [accessToken]);\n  useEffect(() => {\n    setInterval(() => {\n      setShowGreeting(!showGreeting);\n    }, 3000);\n  }, []);\n  useEffect(() => {\n    if (!currentTrack) return;\n    axios.get(\"http://localhost:3001/lyrics\", {\n      params: {\n        track: currentTrack.title,\n        artist: currentTrack.artist\n      }\n    }).then(res => {\n      setLyrics(res.data.lyrics);\n    });\n  }, [currentTrack]); // console.log(searchResults);\n  // whenever accesstoken changes, set token on spotifyAPI\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return; //info i want: artist name, album image, track name, URI\n\n      setSearchResults(res.body.tracks.items.map(track => {\n        // compares the image height and grabs the smallest image\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url\n        };\n      }));\n    });\n    return () => cancel = true;\n  }, [search, accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FadeIn, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"searchbox\",\n          type: \"search\",\n          placeholder: \"Search Tracks by Songs/Artists\",\n          value: search,\n          onChange: e => setSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchresultslist\",\n          children: [searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResult, {\n            track: track,\n            chooseTrack: chooseTrack\n          }, track.uri, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)), searchResults.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lyricscontainer\",\n            children: lyrics\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(MusicPlayer, {\n            trackUri: currentTrack === null || currentTrack === void 0 ? void 0 : currentTrack.uri,\n            accessToken: accessToken\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserProfile, {\n      userInfo: userInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecentlyPlayed, {\n      accessToken: accessToken,\n      recentlyPlayed: recentlyPlayed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainPage, \"7QZeVYlEysr9Pd7rwrAvc0NzV6A=\", false, function () {\n  return [useAuth];\n});\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/Users/josephlau/Desktop/React/Spotifree/client/src/MainPage.js"],"names":["React","useState","useEffect","useAuth","SpotifyWebApi","TrackSearchResult","MusicPlayer","axios","FadeIn","UserProfile","RecentlyPlayed","spotifyApi","clientId","OAuth","MainPage","code","accessToken","search","setSearch","searchResults","setSearchResults","currentTrack","setCurrentTrack","lyrics","setLyrics","showGreeting","setShowGreeting","userInfo","setUserInfo","recentlyPlayed","setRecentlyPlayed","chooseTrack","track","getMyRecentlyPlayedTracks","limit","then","res","fetchRecentlyPlayed","get","headers","Authorization","recentlyplayedlist","data","items","console","log","fetchUserInfo","setInterval","params","title","artist","setAccessToken","cancel","searchTracks","body","tracks","map","smallestAlbumImage","album","images","reduce","smallest","image","height","artists","name","uri","albumUrl","url","e","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport useAuth from \"./useAuth\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport TrackSearchResult from \"./TrackSearchResult\";\nimport MusicPlayer from \"./MusicPlayer\";\nimport axios from \"axios\";\nimport FadeIn from \"react-fade-in\";\nimport UserProfile from \"./UserProfile\";\nimport RecentlyPlayed from \"./RecentlyPlayed\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"1a9068e5a02c4897adb142f295edfe75\",\n});\nconst OAuth =\n  \"BQCyyWCMzxyJmIBrI8YJFrMFVxkCnFBzO_REMsSUux8dJqj8xf73yHwFyv_dmiH53SF6dUG90vTM5U48_gopjm567ahaS3MF9Voo7n8mCRhnQR-jpb3FCDtltGjI2DPFf9OL1Q5sd5s8c49v2dsX\";\nconst MainPage = ({ code }) => {\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [currentTrack, setCurrentTrack] = useState();\n  const [lyrics, setLyrics] = useState();\n  const [showGreeting, setShowGreeting] = useState(true);\n  const [userInfo, setUserInfo] = useState(false);\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\n  const chooseTrack = (track) => {\n    setCurrentTrack(track);\n    // when choosing track, empty the search\n    setSearch(\"\");\n    setLyrics(\"\");\n  };\n\n  useEffect(()=>{\n    \n  })\n  spotifyApi.getMyRecentlyPlayedTracks({ limit: 20 }).then((res) => {\n    setRecentlyPlayed\n  })\n  // Get recently played tracks \n  useEffect(() => {\n    if (!accessToken) return;\n    const fetchRecentlyPlayed = () => {\n      axios\n        .get(\"https://api.spotify.com/v1/me/player/recently-played?limit=10\", {\n          headers: {\n            Authorization: `Bearer ${OAuth}`,\n            \"Content-Type\": \"application/json\",\n          },\n        })\n        .then((res) => {\n          const recentlyplayedlist = res.data.items;\n          console.log(recentlyplayedlist);\n          setRecentlyPlayed(recentlyplayedlist);\n        });\n    };\n    fetchRecentlyPlayed();\n  }, [accessToken]);\n\n  useEffect(() => {\n    if (!accessToken) return;\n    const fetchUserInfo = () => {\n      axios\n        .get(\"https://api.spotify.com/v1/me\", {\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n            \"Content-Type\": \"application/json\",\n          },\n        })\n        .then((res) => {\n          // console.log(res.data);\n          setUserInfo(res.data);\n        });\n    };\n    fetchUserInfo();\n  }, [accessToken]);\n\n  useEffect(() => {\n    setInterval(() => {\n      setShowGreeting(!showGreeting);\n    }, 3000);\n  }, []);\n\n  useEffect(() => {\n    if (!currentTrack) return;\n\n    axios\n      .get(\"http://localhost:3001/lyrics\", {\n        params: {\n          track: currentTrack.title,\n          artist: currentTrack.artist,\n        },\n      })\n      .then((res) => {\n        setLyrics(res.data.lyrics);\n      });\n  }, [currentTrack]);\n  // console.log(searchResults);\n\n  // whenever accesstoken changes, set token on spotifyAPI\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n\n    let cancel = false;\n    spotifyApi.searchTracks(search).then((res) => {\n      if (cancel) return;\n      //info i want: artist name, album image, track name, URI\n      setSearchResults(\n        res.body.tracks.items.map((track) => {\n          // compares the image height and grabs the smallest image\n          const smallestAlbumImage = track.album.images.reduce(\n            (smallest, image) => {\n              if (image.height < smallest.height) return image;\n              return smallest;\n            },\n            track.album.images[0]\n          );\n\n          return {\n            artist: track.artists[0].name,\n            title: track.name,\n            uri: track.uri,\n            albumUrl: smallestAlbumImage.url,\n          };\n        })\n      );\n    });\n    return () => (cancel = true);\n  }, [search, accessToken]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"container2\"></div>\n      <FadeIn>\n        <form>\n          <input\n            className=\"searchbox\"\n            type=\"search\"\n            placeholder=\"Search Tracks by Songs/Artists\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n          />\n          <div className=\"searchresultslist\">\n            {searchResults.map((track) => (\n              <TrackSearchResult\n                track={track}\n                key={track.uri}\n                chooseTrack={chooseTrack}\n              />\n            ))}\n            {searchResults.length === 0 && (\n              <div className=\"lyricscontainer\">{lyrics}</div>\n            )}\n          </div>\n          {/* passing in the access token to enable playback fn*/}\n          <div>\n            <MusicPlayer\n              trackUri={currentTrack?.uri}\n              accessToken={accessToken}\n            />\n          </div>\n        </form>\n      </FadeIn>\n      <UserProfile userInfo={userInfo} />\n\n      <RecentlyPlayed accessToken={accessToken} recentlyPlayed={recentlyPlayed} />\n    </div>\n  );\n};\n\nexport default MainPage;\n"]},"metadata":{},"sourceType":"module"}